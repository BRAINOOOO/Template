int gcd(int a, int b) 
{
    if(b==0)
        return a;
    return gcd(b, a%b);
}
------------------------------------------------------------------------------------------------------------------------------------------
int pow(int b, int p)
{                              // O(log(p) base 2)
    if(p == 0)  
    return 1;
    
    if(p&1)
    return b*pow(b*b,p/2);
    else
    return pow(b*b,p/2);
}
-----------------------------------------------------------------------------------------------------------------------------------------
// What about calculating: (a^1+a^2+a^3+a^4+a^5+a^n) ???
 
// Let's try even power
// (a^1+a^2+a^3+a^4+a^5+a^6)       = (a^1+a^2+a^3)+(a^1*a^3+a^2*a^3+a^3*a^3)
// (a^1+a^2+a^3)+a^3*(a^1+a^2+a^3) = (a^1+a^2+a^3)*(1+a^3)
// (a^1+a^2+a^3)+a^3*(a^1+a^2+a^3) = (a^1+a^2+a^3)*(1+ a^1+a^2+a^3 - (a^1+a^2))
//
 
// what about odd n
// (a^1+a^2+a^3+a^4+a^5+a^6+a^7)   = a + a*(a^1+a^2+a^3+a^4+a^5+a^6)
//                                 = a(1+(a^1+a^2+a^3+a^4+a^5+a^6))
 
 
ll sumPows(ll a, int k) { // Return a^1+a^1+a^2+.....a^k    in O(k)
    if (k == 0)
        return 0;
 
    if (k % 2 != 0)
        return a * (1 + sumPows(a, k - 1));
 
    ll half = sumPows(a, k / 2);
    return half * (1 + half - sumPows(a, k / 2 -1) );
}

--------------------------------------------------------------------------------------------------------------------------------------
